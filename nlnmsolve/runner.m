function runner=runner(iuyy)format longformat compactfunc='nonlineq';nfg=(1.);% Natural Frequency Guess (1 and 1.73).  (Linear natural frequency is a good guess)dt=.1;% Time step for interpolation/evaluation of cost/error%[z0f] = findivs(func,z0g,nfg,dt)v0initial=.1steps=19v0final=2.0dx=(v0final-v0initial)/stepsz0g=[0;v0initial;0;.0970*1.1];% Initial Conditionsfor i=1:steps+1	tic	z0g	[z0final] = findivs(func,z0g,nfg,dt);	z0s(:,i)=z0final;%	t=1:20000;%	sound(sin(t/10.*t/max(t).*sin(t/700)))	z0f=z0g;z0f(4:2:length(z0f))=z0final(2:length(z0final)),z0b=z0f;	z0b(2:2:length(z0g))=-z0g(2:2:length(z0g));	tf=z0final(1)	[tp,z]=ode45(func,0,tf*2,[z0f;z0b]);	z=z';tp=tp';	t=0:tf/100:tf*2;	x1=spline(tp,z(1,:),t);	v1=spline(tp,z(2,:),t);	x2=spline(tp,z(3,:),t);	v2=spline(tp,z(4,:),t);	disp('plotting')	clg	plot3(x1,v1,x2)	xlabel('Modal Displacement')	ylabel('Modal Velocity')	zlabel('Displacement of Second Mass')	disp('done plotting')	pause(1e-6)	u=[u;x1];	v=[v;v1];	dis2=[dis2;x2];	vel2=[vel2;v2];	nfg=2*pi/tf;	z0g(2)=(i+1)*dx;	z0g(4:2:length(z0g))=z0final(2:length(z0final))/i*(i+1);   	sound(sin((1:7000)/2))	%	pause	tocendlu=length(u);u=[zeros(1,lu);u];v=[zeros(1,lu);v];dis2=[zeros(1,lu);dis2];vel2=[zeros(1,lu);vel2];save nlmdata2 u v dis2 vel2clgsurf(u,v,vel2)print